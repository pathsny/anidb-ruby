#!/opt/local/bin/ruby1.9
location = File.expand_path('../console.rb', __FILE__)
exec "ruby1.9 -S irb1.9 -r #{location}  --simple-prompt"


# libs = %( -r "#{APP_ROOT}/config/environment")
# libs << %( -r "#{APP_ROOT}/spec/support/blueprints") unless APP_ENV == 'production'
# libs << %( -r "#{APP_ROOT}/lib/advice_processor/environment")
# libs << %( -r "#{APP_ROOT}/spec/lib/adviceprocessor/blueprints") unless APP_ENV == 'production'
# 
# # libs << " -r console_app"
# # libs << " -r console_sandbox" if options[:sandbox]
# # libs << " -r console_with_helpers"
# 
# if options[:debugger]
#   begin
#     require 'ruby-debug'
#     libs << " -r ruby-debug"
#     puts "=> Debugger enabled"
#   rescue Exception
#     puts "You need to install ruby-debug to run the console in debugging mode. With gems, use 'gem install ruby-debug'"
#     exit
#   end
# end
# 
# ENV['APP_ENV'] = case ARGV.first
#   when "p"; "production"
#   when "d"; "development"
#   when "t"; "test"
#   else
#     ARGV.first || APP_ENV || 'development'
# end
# 
# if options[:sandbox]
#   puts "Loading #{ENV['APP_ENV']} environment in sandbox (Planes)"
#   puts "Any modifications you make will be rolled back on exit"
# else
#   puts "Loading #{ENV['APP_ENV']} environment (Planes)"
# end
# exec "#{RUBY} -S #{options[:irb]} #{libs} --simple-prompt"
